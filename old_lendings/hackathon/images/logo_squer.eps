%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 353 527 489 664 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: logo_squer.eps
%%CreationDate: Mon Oct 11 16:33:06 2010
%%DocumentProcessColors: Magenta Yellow 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW Version 15.0.0.486
/EpsFile true def
%%BeginResource: procset wCorel15Dict 15.0 0
/wCorel15Dict 300 dict def wCorel15Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparation/LumSepsDict where
{pop false}{/AldusSepsDict where{pop false}{InRipSeparation{true}{1 0 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not}ifelse
}ifelse}ifelse def/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{
deviceinfo/Colors get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict
/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{
false}ifelse}ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode
/OnHost ne InRipSeparation AdobeDistiller or and}bind}{false}ifelse def
/DocGrayScaleSpace[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace
[/DeviceCMYK]def/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[
0.9637 1.0000 0.8241]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116
div}bind{500 div}bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[
{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul
}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000
mul}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse
0.8241 mul}bind]>>]def/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE load/DocGrayScaleSpace xd DocGrayScaleSpace aload pop
begin pop/DecodeA where{pop DecodeA type/arraytype eq{DecodeA aload pop
/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop/DocRgbSpaceCIE load
/DocRgbSpace xd}if/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE load/DocCmykSpace
xd}if}bd/set_rendering_intent{Level3{findcolorrendering{/ColorRendering
findresource setcolorrendering}{dup/DefaultColorRendering eq{pop}{
/ColorRendering findresource setcolorrendering}}ifelse}if}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch[exch/Separation exch dup 4 get
exch DocCmykSpace exch 0 4 getinterval cvx[exch/dup load exch{mul exch dup}
/forall load/pop load dup]cvx]setcolorspace setcolor}def}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSpace safe_setcolorspace color aload pop setcolor}bd/separate_set_color{
SeparationMode/OnHost eq{separate_color{/set_color dexec true}{pop
currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1 SetGry true}
ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{currentdict false
}bd/convert_to_cmyk{currentdict}bd currentdict end def/GrayscaleColorSpec
ColorSpec 9 dict copy begin/names{/Black}def/num 1 def/ColorModel/Grayscale def
/ColorSpace DocGrayScaleSpace def/separate_color{SeparationMode/OnHost eq{
SeparationPlateName/Black eq{SeparateInColor{convert_to_cmyk true}{currentdict
true}ifelse}{currentdict false}ifelse}{currentdict false}ifelse}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9 dict copy begin
/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk def/ColorSpace
DocCmykSpace def/separate_color{currentdict false SeparationPlateIndex 0 ge
SeparationPlateIndex 3 le and{color SeparationPlateIndex get dup 0 gt{3 1 roll
pop pop SeparateInColor{0 0 0 4 SeparationPlateIndex roll create_cmyk_color
true}{1 exch sub create_grayscale_color true}ifelse}{pop}ifelse}if}bd
/convert_to_cmyk{currentdict}bd currentdict end def/create_cmyk_color{
CmykColorSpec 9 dict copy begin 4 array astore/color exch def/ColorSpace
DocCmykSpace def currentdict end}bd/SpotColorSpec ColorSpec 9 dict copy begin
/num 1 def/ColorModel/Spot def/separate_color{currentdict false
SeparationPlateIndex 4 eq{names aload pop SeparationPlateName eq{pop pop color
aload pop dup 0 gt{SeparateInColor{pop convert_to_cmyk true}{1 exch sub
create_grayscale_color true}ifelse}if}if}if}bd/convert_to_cmyk{
/alternativeSpace ColorSpace 2 get def/tintTransformProc ColorSpace 3 get def
alternativeSpace DocCmykSpace eq{color aload pop tintTransformProc
create_cmyk_color}{alternativeSpace DocRgbSpace eq{color aload pop
tintTransformProc create_rgb_color/convert_to_cmyk dexec}{alternativeSpace
DocGrayScaleSpace eq{0 0 0 color aload pop 1 sub create_cmyk_color}if}ifelse}
ifelse}bd currentdict end def/create_spot_colorspace{load/alternativeSpace xd
/alternativeColor xd/name xd[/Separation name alternativeSpace[
alternativeColor alternativeSpace/spot_tint_transform_proc cvx]cvx]}bd
/create_spot_color{SpotColorSpec 9 dict copy begin dup type/arraytype ne{
create_spot_colorspace}if/ColorSpace xd/color exch 1 array astore def
ColorSpace 1 get 1 array astore/names xd currentdict end}bd/DevicenColorSpec
SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def/set_color{Level3{
ColorSpace safe_setcolorspace color aload pop setcolor}{ColorSpace 2 get
setcolorspace color aload pop ColorSpace 3 get exec setcolor}ifelse}bd
/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup names
exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex 0 ge
{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd numColorants array astore
/alternativeColors xd/names xd[/DeviceN names alternativeSpace[
alternativeColors names alternativeSpace numColorants
/devicen_colorant_mixer_proc cvx]cvx]}bd/create_devicen_color{DevicenColorSpec
9 dict copy begin dup type/arraytype ne{create_devicen_colorspace}if
/ColorSpace xd/num ColorSpace 1 get length def/names ColorSpace 1 get def num
array astore/color xd currentdict end}bd/RegistrationColorSpec ColorSpec 9 dict
copy begin/num 1 def/ColorModel/Registration def/ColorSpace{[/Separation/All
DocCmykSpace{dup dup dup}]}def/names[/All]def/separate_color{SeparateInColor{
convert_to_cmyk true}{color aload pop 1 exch sub create_grayscale_color true}
ifelse}bd/convert_to_cmyk{color aload pop dup dup dup create_cmyk_color}bd
currentdict end def/create_registration_color{RegistrationColorSpec 9 dict copy
begin 1 array astore/color xd currentdict end}bd/LabColorSpec ColorSpec 9 dict
copy begin/names{/L/a/b}def/num 3 def/ColorModel/Lab def/ColorSpace DocLabSpace
def/separate_color{convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{0 0
0 0 create_cmyk_color}bd currentdict end def/create_lab_color{LabColorSpec 9
dict copy begin 3 array astore/color exch def/ColorSpace DocLabSpace def
currentdict end}bd/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{
/OutlineColor xd}bd/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel
get_ps_level gt{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel applicatin)show 72
120 m(by selecting the PostScript tab in the print dialog, and selecting)show
72 108 m(document level from the Compatibility drop down list.)show flush spg
quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/setcmykcolor{create_cmyk_color/separate_set_color dexec
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/create_datasource{
currentfile DevicenImage not get_ps_level 2 gt or{/ASCII85Decode filter}if
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/set_image_strip_parameters{/stripRows xd/numPlanes xd/stripBuffer
$wid $bts mul $ncl mul stripRows mul 8 div ceiling cvi string def/readstrip{
DataSource stripBuffer readhexstring pop}bd/stripHeight $lly $ury sub stripRows
mul $hei div def/stripOutBuffer $wid stripRows mul numPlanes mul string def
/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid def
/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}repeat]
def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]def
/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul div floor cvi def numPlanes stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if $llx $lly
Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor/separate_set_color
dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}ifelse[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq{imagemask}{image}ifelse $SDF
{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}ifelse}bd
/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/$dat
$wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq $ncl 1 eq
or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl 3 eq{
dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def/@cc1
load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch string
def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load/@cc3 load
/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp @ss}if}bd
/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{currentfile $dat2
readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop}bd/@cc4{
currentfile $dat4 readhexstring pop}bd/$msimage false def/ImageCompression
/None def/MaskedImage false def/DevicenImage false def/output_color_image{@np
$ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse
setcolorspace/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $ngx
$llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def
/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}
repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource create_datasource def currentdict end image $SDF{$dsf $dsa $dsp
@ss}if}bd/simulate_devicen_image{@np $ngx/colorantNames ImageDevicenSpace 1 get
def/altColorSpace ImageDevicenSpace 2 get def/tintProc ImageDevicenSpace 3 get
def/DataSource create_datasource def/stripRows 65535 $wid $bts mul $ncl mul div
floor cvi def 1 stripRows set_image_strip_parameters/maxStripIndex $hei
stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{1 $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs $llx $t_lly Tl $urx $llx
sub $t_ury $t_lly sub scale 0 1 $ncl 1 sub{@gs/inkIndex exch def 0 1
stripOutBuffer length 1 sub{dup $ncl mul inkIndex add stripBuffer exch get
stripOutBuffer 3 1 roll put}for[/Separation colorantNames inkIndex get
altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll tintProc}]setcolorspace
inkIndex 0 gt{true setoverprint}if strip_img_dict image @gr}for @gr}for $SDF
{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx/colorantNames
ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2 get def/tintProc
ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{/numAltChannels 4 def
}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{/numAltChannels 1 def}
ifelse}ifelse/DataSource create_datasource def altColorSpace setcolorspace
/stripRows 65535 $wid $bts mul $ncl numAltChannels max mul div floor cvi def
numAltChannels stripRows set_image_strip_parameters/maxStripIndex $hei
stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{numAltChannels $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs 0 1 $wid stripRows mul 1
sub{/pixelIndex xd stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}
forall tintProc exec numAltChannels array astore/pixelAltIndex pixelIndex
numAltChannels mul def/posColorant 0 def{stripOutBuffer pixelAltIndex
posColorant add 3 -1 roll 255 mul cvi put/posColorant posColorant 1 add def}
forall}for $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale strip_img_dict
image @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_native{@np
$ngx ImageDevicenSpace setcolorspace/scanline $wid $bts mul $ncl mul 8 div
ceiling cvi string def/readscanline{currentfile scanline readhexstring pop}
bind def $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType
1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl
{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource{readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}
bd/output_devicen_image{Level3{output_devicen_image_native}{
get_simulate_devicen{simulate_devicen_image}{output_devicen_image_alt}ifelse}
ifelse}bd/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi string def 0 1 $hei
1 sub{currentfile scanline readhexstring pop pop pop}for}bd
/disable_raster_output{/output_image load/output_image_original exch def
/output_image/skip_image_body def globaldict begin/bSkipDeviceNImage true def
end}bd/enable_raster_output{/output_image_original where{
/output_image_original load/output_image xd/output_image_original undef
globaldict begin/bSkipDeviceNImage undef end}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel15Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
354.25106 528.58063 487.63871 661.97055 @E
/$fm 0 def
 0 O 0 @g
0.89 0.12 0.14  create_rgb_color set_solid_fill
0 J 0 j 22.925590208261603 setmiterlimit
[] 0 d 0 R 0 @G
1.00 1.00 1.00  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 2.12570 2.12570 0.00000 @w
354.25106 528.58063 m
487.63871 528.58063 L
487.63871 661.97055 L
354.25106 661.97055 L
354.25106 528.58063 L
@c
B

@rax %Note: Object
370.99134 561.04271 473.67751 632.69802 @E
/$fm 0 def
 0 O 0 @g
1.00 1.00 1.00  create_rgb_color set_solid_fill
429.55398 564.04035 m
429.45109 563.85354 L
429.32069 563.68517 L
429.18009 563.49808 L
428.99102 563.34529 L
428.82321 563.22340 L
428.63414 563.11682 L
428.43487 563.01052 L
428.22879 562.95014 L
428.01250 562.89005 L
427.80302 562.85943 L
427.59354 562.85065 L
415.90290 562.85065 L
415.90290 567.33534 L
427.59354 567.33534 L
427.80302 567.30898 L
428.01250 567.27496 L
428.22879 567.23669 L
428.42806 567.16838 L
428.63414 567.06917 L
428.81953 566.95011 L
428.99102 566.82170 L
429.13899 566.69102 L
429.18009 566.63773 L
429.32069 566.49231 L
429.45109 566.32592 L
429.55398 566.13657 L
429.64668 565.94409 L
429.72917 565.72809 L
429.77027 565.51493 L
429.80825 565.30063 L
429.81874 565.08435 L
429.80825 564.86466 L
429.77027 564.64498 L
429.72917 564.42671 L
429.64668 564.23991 L
429.55398 564.04035 L
@c
385.59543 603.47339 m
384.48312 605.13222 383.63981 606.97644 383.39121 609.12028 C
380.74706 609.07408 L
379.97830 598.53175 364.29052 595.72800 374.34387 584.20006 C
376.42110 585.71433 L
369.28630 593.87074 378.95187 597.34488 382.16154 604.18602 C
382.68454 603.12614 383.32403 602.14592 384.02022 601.22296 C
381.51865 597.12491 381.03222 592.66828 386.20318 586.74954 C
388.27020 588.26353 L
378.41981 599.54428 394.09002 605.83068 398.03868 615.49285 C
399.44806 612.30728 401.67893 609.66000 404.02857 607.06290 C
399.82082 601.23345 398.49165 595.04230 406.15200 585.87732 C
408.26665 587.35871 L
401.18825 595.81474 402.96076 601.49452 407.24759 606.98466 C
407.35672 606.98835 407.46614 606.98523 407.57329 606.97587 C
407.39414 607.17005 L
408.67115 608.78324 410.15849 610.38255 411.69685 612.03345 C
415.58003 616.24488 419.76907 620.75792 421.98321 626.58454 C
424.12224 620.41805 428.56866 615.73493 432.69222 611.40557 C
439.60025 604.15739 445.51644 597.92683 435.95773 586.99644 C
438.02816 585.47934 L
446.28661 594.92126 444.55890 601.18157 439.91575 607.16013 C
442.28721 609.77112 444.55833 612.43483 445.96970 615.66406 C
449.89795 606.00614 465.59594 599.71068 455.72485 588.41660 C
457.79187 586.91282 L
462.71849 592.54639 462.51468 596.85420 460.32463 600.78898 C
461.14724 601.83298 461.90154 602.95465 462.51581 604.18602 C
465.71187 597.33808 475.37093 595.14973 468.24973 586.99644 C
470.31676 585.47934 L
480.38712 596.99509 464.68885 598.53146 463.91669 609.07380 C
461.28274 609.12028 L
461.00891 606.79871 460.04967 604.83798 458.81717 603.08816 C
454.75512 608.53351 447.92334 613.60356 447.38419 621.04649 C
444.74060 621.09638 L
444.43701 618.47858 443.46161 616.19187 442.12479 614.08176 C
438.90009 617.71011 435.82139 621.57969 435.46989 626.46123 C
432.80901 626.52132 L
432.46517 623.54494 431.24457 620.98724 429.61408 618.63619 C
426.42737 622.56359 423.82857 627.03128 423.42548 632.64132 C
420.77820 632.69802 L
420.14806 627.23792 417.53197 622.85669 414.41414 618.98570 C
412.86869 621.26589 411.72208 623.74167 411.38787 626.61402 C
408.74428 626.56781 L
408.37663 621.55786 405.16838 617.62535 401.86828 613.92699 C
400.53345 616.03398 399.55833 618.31757 399.25389 620.93112 C
396.60321 620.89058 L
396.08249 613.69739 389.68809 608.71720 385.59543 603.47339 C
@c
405.62391 609.11178 m
404.81376 610.01972 404.02828 610.93956 403.30063 611.88803 C
405.96009 614.80885 408.78567 617.78608 410.15877 621.17348 C
410.84277 619.64532 411.69572 618.24501 412.66772 616.91556 C
411.67644 615.78652 410.66334 614.69490 409.67093 613.62510 C
408.24794 612.09411 406.86378 610.60450 405.62391 609.11178 C
@c
397.44454 599.14318 m
397.37906 599.44479 L
397.44454 599.14318 L
@c
431.36050 616.58929 m
432.46006 615.35565 433.59279 614.16822 434.70085 613.00687 C
435.94101 611.70094 437.15225 610.42422 438.26627 609.15033 C
439.11128 610.09455 439.93106 611.05039 440.68791 612.03685 C
438.08910 614.88369 435.37975 617.78778 434.04180 621.08617 C
433.32690 619.46702 432.40620 617.98847 431.36050 616.58929 C
@c
424.65458 573.61124 m
424.86746 573.57524 L
425.08715 573.51883 L
425.28302 573.45534 L
425.47890 573.35556 L
425.67080 573.25238 L
425.84939 573.11320 L
425.98998 572.98847 L
426.04526 572.93830 L
426.16885 572.78353 L
426.30265 572.62422 L
426.40894 572.42523 L
426.50192 572.23644 L
426.58781 572.02016 L
426.62863 571.81039 L
426.66690 571.59553 L
426.67370 571.37584 L
426.66690 571.16154 L
426.62863 570.93534 L
426.58781 570.73380 L
426.50192 570.52431 L
426.40894 570.32589 L
426.30265 570.14901 L
426.20627 569.99424 L
426.04526 569.81424 L
425.85959 569.64246 L
425.68498 569.51518 L
425.48570 569.39698 L
425.29663 569.31817 L
425.10416 569.24929 L
424.90176 569.18891 L
424.70929 569.15802 L
424.52079 569.14243 L
415.90290 569.14243 L
415.90290 573.61663 L
424.44510 573.61663 L
424.65458 573.61124 L
@c
428.40085 570.49597 m
428.43487 570.66690 L
428.46236 570.84746 L
428.47937 571.01698 L
428.48617 571.18932 L
428.48617 571.36592 L
428.46548 571.80387 L
428.41106 572.19364 L
428.31808 572.57065 L
428.20157 572.91959 L
428.03631 573.26117 L
427.84101 573.59254 L
427.58674 573.92561 L
427.20236 574.35335 L
427.00309 574.50728 L
426.68391 574.76494 L
426.33723 574.95770 L
425.99679 575.12041 L
425.64671 575.25250 L
425.25921 575.36107 L
424.85386 575.40217 L
424.40740 575.43279 L
415.01707 575.43279 L
414.90737 575.42230 L
414.81808 575.41209 L
414.74239 575.38261 L
414.66671 575.36589 L
414.59499 575.32989 L
414.51931 575.28170 L
414.44334 575.22841 L
414.35802 575.15953 L
414.28233 575.06428 L
414.23046 575.00702 L
414.19304 574.93332 L
414.14513 574.86614 L
414.12416 574.79074 L
414.10346 574.71222 L
414.08986 574.61556 L
414.08986 574.49934 L
414.08986 561.96397 L
414.08986 561.84151 L
414.10346 561.76271 L
414.13181 561.68192 L
414.15534 561.58356 L
414.19304 561.51468 L
414.23783 561.45203 L
414.28913 561.37975 L
414.35802 561.29868 L
414.43654 561.22951 L
414.51222 561.18869 L
414.58110 561.12661 L
414.66671 561.09260 L
414.72850 561.07077 L
414.81808 561.05461 L
414.90737 561.04271 L
415.01707 561.04271 L
427.57654 561.04271 L
427.99890 561.05461 L
428.40085 561.10677 L
428.77474 561.19975 L
429.13899 561.32277 L
429.47887 561.48576 L
429.80825 561.68504 L
430.12772 561.93591 L
430.45398 562.23298 L
430.74879 562.54564 L
430.98605 562.85943 L
431.18476 563.19931 L
431.34009 563.53890 L
431.46652 563.89096 L
431.55269 564.27279 L
431.61761 564.66227 L
431.63178 565.08435 L
431.61761 565.50302 L
431.55269 565.89335 L
431.46652 566.27943 L
431.34009 566.62724 L
431.18476 566.95691 L
430.97953 567.30246 L
430.73518 567.61682 L
430.42280 567.95443 L
430.25471 568.13357 L
430.08293 568.29090 L
429.90123 568.44397 L
429.69175 568.56926 L
429.48907 568.69087 L
429.27279 568.77902 L
429.05310 568.87852 L
428.01250 569.22831 L
428.32488 570.18643 L
428.37959 570.34403 L
428.40085 570.49597 L
@c
394.12743 561.04271 m
394.23061 561.04271 L
394.32331 561.05461 L
394.40239 561.07077 L
394.48828 561.09260 L
394.55688 561.12661 L
394.63597 561.18869 L
394.71506 561.22951 L
394.78337 561.29868 L
394.83496 561.36302 L
394.89307 561.42879 L
394.93814 561.51468 L
394.97896 561.58356 L
394.99965 561.67172 L
395.01326 561.75789 L
395.03083 561.84151 L
395.04104 561.96397 L
395.04104 572.63414 L
401.42438 567.53206 L
401.50998 567.47254 L
401.57150 567.43483 L
401.63669 567.39146 L
401.70529 567.37276 L
401.77757 567.35065 L
401.83597 567.33676 L
401.91817 567.33534 L
401.99386 567.33534 L
402.07975 567.33534 L
402.16224 567.33676 L
402.23055 567.35065 L
402.30283 567.37276 L
402.37512 567.39146 L
402.43663 567.44504 L
402.51912 567.48784 L
402.59480 567.54085 L
408.95376 572.63414 L
408.95376 561.96397 L
408.96737 561.84151 L
408.96737 561.76271 L
408.99827 561.68192 L
409.01528 561.58356 L
409.06006 561.51468 L
409.10117 561.45203 L
409.14567 561.37975 L
409.23156 561.29868 L
409.30044 561.22951 L
409.37216 561.18869 L
409.44444 561.12661 L
409.51332 561.09260 L
409.59241 561.07077 L
409.68454 561.05461 L
409.76362 561.04271 L
409.86340 561.04271 L
409.95638 561.04271 L
410.04907 561.05461 L
410.14857 561.07077 L
410.21008 561.09260 L
410.29597 561.12661 L
410.36145 561.18869 L
410.44337 561.22951 L
410.50885 561.29868 L
410.56413 561.36302 L
410.62224 561.42879 L
410.66986 561.51468 L
410.70132 561.58356 L
410.72173 561.67172 L
410.75943 561.75789 L
410.76964 561.84151 L
410.76964 561.96397 L
410.76964 574.50728 L
410.76964 574.61556 L
410.75943 574.70542 L
410.73902 574.77713 L
410.70813 574.86614 L
410.68091 574.92510 L
410.63953 574.99313 L
410.58794 575.06428 L
410.52246 575.14620 L
410.46094 575.21310 L
410.39546 575.25250 L
410.31978 575.31231 L
410.26167 575.34180 L
410.19647 575.36589 L
410.13099 575.38261 L
410.05587 575.40217 L
409.94589 575.40217 L
409.83250 575.41209 L
409.74661 575.41209 L
409.67093 575.40217 L
409.59241 575.38261 L
409.52013 575.36107 L
409.44784 575.32309 L
409.37216 575.26951 L
409.28655 575.21650 L
401.99386 569.38989 L
394.73546 575.21310 L
394.65298 575.26951 L
394.57389 575.32309 L
394.48828 575.36107 L
394.40920 575.38261 L
394.33351 575.40217 L
394.25443 575.41209 L
394.18271 575.41209 L
394.06961 575.40217 L
393.95282 575.40217 L
393.87713 575.38261 L
393.81165 575.36589 L
393.74334 575.34180 L
393.67786 575.31231 L
393.60557 575.25250 L
393.53726 575.21310 L
393.48198 575.14620 L
393.40687 575.06428 L
393.36180 574.99313 L
393.31417 574.91802 L
393.28639 574.84743 L
393.25890 574.77713 L
393.24529 574.70343 L
393.22828 574.59883 L
393.22828 574.49934 L
393.22828 561.96397 L
393.22828 561.84151 L
393.24529 561.76271 L
393.25890 561.68192 L
393.28639 561.58356 L
393.33118 561.51468 L
393.37228 561.45203 L
393.42047 561.37975 L
393.50636 561.29868 L
393.58517 561.22951 L
393.64016 561.18869 L
393.71556 561.12661 L
393.79465 561.09260 L
393.87005 561.07077 L
393.94942 561.05461 L
394.03814 561.04271 L
394.12743 561.04271 L
@c
436.00224 567.62702 m
436.35572 567.49465 L
436.73386 567.39146 L
437.12816 567.33676 L
437.55732 567.33534 L
447.00661 567.33534 L
447.19909 567.30898 L
447.42898 567.27496 L
447.62485 567.23669 L
447.83773 567.16838 L
448.03701 567.06917 L
448.21531 566.95011 L
448.39389 566.82170 L
448.54129 566.69102 L
448.59005 566.63773 L
448.71987 566.49231 L
448.83666 566.32592 L
448.96054 566.13657 L
449.04954 565.94409 L
449.12891 565.72809 L
449.17342 565.51493 L
449.21112 565.30063 L
449.21764 565.08435 L
449.21112 564.86466 L
449.17342 564.64498 L
449.12891 564.42671 L
449.04954 564.23991 L
448.96054 564.04035 L
448.85395 563.85354 L
448.73065 563.68517 L
448.58268 563.49808 L
448.39389 563.35890 L
448.21871 563.22340 L
448.04409 563.11682 L
447.83773 563.01052 L
447.63165 562.95014 L
447.42898 562.89005 L
447.19909 562.85943 L
446.98961 562.85065 L
434.41937 562.85065 L
434.30258 562.85065 L
434.22038 562.82542 L
434.14838 562.80954 L
434.06929 562.79083 L
433.98652 562.75313 L
433.91140 562.69786 L
433.84592 562.63946 L
433.76003 562.55896 L
433.68831 562.48016 L
433.61943 562.41099 L
433.57833 562.34608 L
433.54715 562.27918 L
433.51994 562.20009 L
433.50973 562.13320 L
433.49244 562.02831 L
433.48564 561.93591 L
433.49244 561.84151 L
433.50293 561.76271 L
433.51994 561.68192 L
433.54715 561.58356 L
433.58542 561.51468 L
433.63644 561.45203 L
433.69172 561.37975 L
433.76003 561.29868 L
433.83912 561.22951 L
433.91140 561.18869 L
433.98652 561.12661 L
434.05569 561.09260 L
434.13109 561.07077 L
434.20989 561.05461 L
434.30258 561.04271 L
434.41937 561.04271 L
446.97260 561.04271 L
447.39836 561.05461 L
447.79635 561.10677 L
448.17080 561.19975 L
448.54129 561.32277 L
448.88485 561.48576 L
449.21112 561.68504 L
449.53710 561.93591 L
449.85657 562.23298 L
450.14854 562.54564 L
450.39231 562.85943 L
450.58762 563.19931 L
450.74608 563.53890 L
450.86967 563.89096 L
450.97285 564.27279 L
451.01027 564.66227 L
451.03776 565.08435 L
451.01027 565.50302 L
450.97285 565.89335 L
450.86967 566.27943 L
450.74608 566.62724 L
450.58762 566.95691 L
450.38154 567.30246 L
450.13833 567.61682 L
449.71597 568.08028 L
449.54050 568.22060 L
449.23550 568.47543 L
448.89137 568.66734 L
448.54469 568.83912 L
448.18781 568.96583 L
447.79635 569.06561 L
447.39836 569.10643 L
446.97260 569.14243 L
437.52331 569.14243 L
437.31383 569.14923 L
437.10094 569.18551 L
436.89487 569.22831 L
436.69219 569.31619 L
436.49008 569.39698 L
436.30101 569.51518 L
436.12583 569.64756 L
435.98183 569.77795 L
435.93676 569.81424 L
435.80665 569.96702 L
435.68277 570.13682 L
435.56967 570.31682 L
435.46989 570.51751 L
435.39449 570.73380 L
435.34658 570.93534 L
435.31909 571.16154 L
435.30548 571.37584 L
435.31909 571.59553 L
435.34658 571.81861 L
435.39449 572.03717 L
435.47698 572.23644 L
435.57987 572.44252 L
435.69666 572.63414 L
435.83754 572.80989 L
435.98183 572.95049 L
436.12243 573.07946 L
436.29420 573.23197 L
436.47987 573.33855 L
436.68198 573.43606 L
436.89487 573.51883 L
437.10094 573.57524 L
437.31383 573.61124 L
437.52331 573.61663 L
447.96472 573.61663 L
448.07443 573.61663 L
448.17080 573.63562 L
448.24932 573.64753 L
448.34202 573.68693 L
448.42450 573.71953 L
448.50728 573.76772 L
448.58268 573.81761 L
448.62746 573.87969 L
448.68926 573.95339 L
448.75417 574.02369 L
448.79924 574.10079 L
448.83326 574.17647 L
448.85395 574.25669 L
448.88485 574.34315 L
448.89137 574.42706 L
448.89137 574.52995 L
448.89137 574.61556 L
448.88485 574.71222 L
448.85395 574.79074 L
448.83326 574.88343 L
448.79924 574.94665 L
448.75417 575.00702 L
448.70655 575.08583 L
448.64079 575.15953 L
448.57219 575.22841 L
448.47978 575.28170 L
448.42450 575.32309 L
448.33521 575.36589 L
448.24932 575.38261 L
448.17080 575.41209 L
448.07443 575.42230 L
447.96472 575.43279 L
437.55732 575.43279 L
437.12816 575.40217 L
436.73386 575.36107 L
436.37329 575.25250 L
436.00904 575.12891 L
435.65924 574.95770 L
435.33609 574.76494 L
435.01351 574.51748 L
434.70113 574.22608 L
434.40208 573.92561 L
434.15518 573.58913 L
433.95591 573.26117 L
433.78441 572.91959 L
433.66054 572.56583 L
433.57181 572.17635 L
433.50973 571.79707 L
433.48564 571.37584 L
433.50973 570.96255 L
433.57181 570.56570 L
433.66054 570.17112 L
433.78441 569.81424 L
433.95591 569.46557 L
434.15518 569.12570 L
434.50186 568.69087 L
435.01351 568.22060 L
435.33609 567.98079 L
435.65924 567.77584 L
436.00224 567.62702 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel15Dict 15.0 0
%%EOF
